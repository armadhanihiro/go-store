version: "3.8"
services:
  postgres:
    container_name: gostore_postgres
    image: postgres:15.3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gostore
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d gostore"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
    volumes:
       - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - gostore_network
    restart: always

  app:
    container_name: gostore_app
    build:
      context: ./
    image: studi-devsecops/gostore
    ports:
      - 3333:3333
    volumes:
       - ./config/app.env:/app/config/app.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gostore_network
    restart: always

  swagger:
    container_name: gostore_swagger
    image: swaggerapi/swagger-ui
    ports:
      - "3334:8080"
    volumes:
      - ./docs:/docs
    environment:
      - SWAGGER_JSON=/docs/api.yml
      - BASE_URL=/swagger
    networks:
      - gostore_network

  migrate:
    image: migrate/migrate
    profiles:
      - tools
    volumes:
      - ./migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:postgres@postgres:5432/gostore?sslmode=disable"
      ]
    command: "up"
    depends_on:
      - postgres
    networks:
      - gostore_network

volumes:
  # default dir on Ubuntu: /var/lib/docker/volumes
  postgres:

networks:
  gostore_network:
    driver: bridge
